/**
 * ButterBakery OPS - ููุงุท ููุงูุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช
 * ูุฐุง ุงูููู ูุญุชูู ุนูู ููุงุท ููุงูุฉ ุฅุถุงููุฉ ููุชุญูู ูู ุญุงูุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุงุณุชุนุฑุงุถ ุงููุนูููุงุช
 */

const { getDatabaseInfo, backupDatabase, restoreDatabase, query } = require('./db-connect');

/**
 * ุฅุถุงูุฉ ููุงุท ููุงูุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุฅูู ุงูุชุทุจูู
 * @param {Express} app ุชุทุจูู Express
 */
function addDatabaseRoutes(app) {
  console.log('๐ ุฅุถุงูุฉ ููุงุท ููุงูุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช...');
  
  // ููุทุฉ ููุงูุฉ ููุชุญูู ูู ุตุญุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช
  app.get('/api/db-status', async (req, res) => {
    try {
      console.log('๐ ุทูุจ ุญุงูุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช');
      
      // ุงูุชุญูู ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช
      const result = await query('SELECT NOW() as time, current_database() as db_name, current_user as db_user');
      
      // ุงูุญุตูู ุนูู ูุนูููุงุช ุญูู ูุงุนุฏุฉ ุงูุจูุงูุงุช (ุนุฏุฏ ุงูุฌุฏุงูู ูุงูุณุฌูุงุช)
      const dbInfo = await getDatabaseInfo();
      
      res.json({
        status: 'success',
        connected: true,
        database_info: {
          name: result.rows[0].db_name,
          user: result.rows[0].db_user,
          server_time: result.rows[0].time,
          tables_count: dbInfo.tables_count,
        },
        tables: dbInfo.tables,
        message: 'ุชู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ'
      });
    } catch (err) {
      console.error('โ ุฎุทุฃ ูู ุงูุชุญูู ูู ุญุงูุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช:', err.message);
      
      res.status(500).json({
        status: 'error',
        connected: false,
        message: 'ูุดู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช: ' + err.message
      });
    }
  });
  
  // ููุทุฉ ููุงูุฉ ูุนุฑุถ ูุญุชููุงุช ุฌุฏูู ูุนูู (ูููุดุฑููู ููุท)
  app.get('/api/db-table/:tableName', async (req, res) => {
    try {
      // ููุง ูููู ุฅุถุงูุฉ ุงูุชุญูู ูู ุตูุงุญูุงุช ุงููุณุชุฎุฏู
      // if (!req.user || req.user.role !== 'admin') {
      //   return res.status(403).json({ 
      //     status: 'error', 
      //     message: 'ุบูุฑ ูุตุฑุญ ุจุงููุตูู'
      //   });
      // }
      
      const { tableName } = req.params;
      const limit = req.query.limit || 100;
      const offset = req.query.offset || 0;
      
      // ุงูุชุญูู ูู ุชุตููุฉ ุงุณู ุงูุฌุฏูู ูุชุฌูุจ SQL Injection
      const safeTableName = tableName.replace(/[^a-zA-Z0-9_]/g, '');
      
      if (safeTableName !== tableName) {
        return res.status(400).json({
          status: 'error',
          message: 'ุงุณู ุฌุฏูู ุบูุฑ ุตุงูุญ'
        });
      }
      
      // ุงูุชุญูู ูู ูุฌูุฏ ุงูุฌุฏูู
      const tableCheck = await query(`
        SELECT EXISTS (
          SELECT FROM information_schema.tables 
          WHERE table_schema = 'public' 
          AND table_name = $1
        ) as exists
      `, [safeTableName]);
      
      if (!tableCheck.rows[0].exists) {
        return res.status(404).json({
          status: 'error',
          message: `ุงูุฌุฏูู ${safeTableName} ุบูุฑ ููุฌูุฏ`
        });
      }
      
      // ุงูุญุตูู ุนูู ุนุฏุฏ ุงูุณุฌูุงุช ุงูุฅุฌูุงูู
      const countResult = await query(`SELECT COUNT(*) FROM "${safeTableName}"`);
      const totalCount = parseInt(countResult.rows[0].count);
      
      // ุงูุญุตูู ุนูู ุงูุณุฌูุงุช
      const result = await query(`SELECT * FROM "${safeTableName}" LIMIT $1 OFFSET $2`, [limit, offset]);
      
      res.json({
        status: 'success',
        table: safeTableName,
        rows: result.rows,
        count: result.rowCount,
        total: totalCount,
        pagination: {
          limit: parseInt(limit),
          offset: parseInt(offset),
          pages: Math.ceil(totalCount / limit)
        }
      });
    } catch (err) {
      console.error('โ ุฎุทุฃ ูู ุงุณุชุนูุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช:', err.message);
      
      res.status(500).json({
        status: 'error',
        message: 'ุฎุทุฃ ูู ุงุณุชุนูุงู ูุงุนุฏุฉ ุงูุจูุงูุงุช: ' + err.message
      });
    }
  });
  
  // ููุทุฉ ููุงูุฉ ูุนูู ูุณุฎุฉ ุงุญุชูุงุทูุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช (ูููุดุฑููู ููุท)
  app.post('/api/db-backup', async (req, res) => {
    try {
      // ุงูุชุญูู ูู ุตูุงุญูุงุช ุงููุณุชุฎุฏู (ูุซุงู)
      // if (!req.user || req.user.role !== 'admin') {
      //   return res.status(403).json({ 
      //     status: 'error', 
      //     message: 'ุบูุฑ ูุตุฑุญ ุจุงููุตูู'
      //   });
      // }
      
      const backupFilePath = await backupDatabase();
      
      if (backupFilePath) {
        res.json({
          status: 'success',
          message: 'ุชู ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ ุจูุฌุงุญ',
          backup_file: backupFilePath
        });
      } else {
        res.status(500).json({
          status: 'error',
          message: 'ูุดู ุฅูุดุงุก ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ'
        });
      }
    } catch (err) {
      console.error('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ:', err.message);
      
      res.status(500).json({
        status: 'error',
        message: 'ุฎุทุฃ ูู ุฅูุดุงุก ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ: ' + err.message
      });
    }
  });
  
  // ููุทุฉ ููุงูุฉ ูุงุณุชุนุงุฏุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูู ูุณุฎุฉ ุงุญุชูุงุทูุฉ (ูููุดุฑููู ููุท)
  app.post('/api/db-restore', async (req, res) => {
    try {
      // ุงูุชุญูู ูู ุตูุงุญูุงุช ุงููุณุชุฎุฏู (ูุซุงู)
      // if (!req.user || req.user.role !== 'admin') {
      //   return res.status(403).json({ 
      //     status: 'error', 
      //     message: 'ุบูุฑ ูุตุฑุญ ุจุงููุตูู'
      //   });
      // }
      
      const { backupFile } = req.body;
      
      if (!backupFile) {
        return res.status(400).json({
          status: 'error',
          message: 'ูู ูุชู ุชุญุฏูุฏ ููู ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ'
        });
      }
      
      const success = await restoreDatabase(backupFile);
      
      if (success) {
        res.json({
          status: 'success',
          message: 'ุชู ุงุณุชุนุงุฏุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ'
        });
      } else {
        res.status(500).json({
          status: 'error',
          message: 'ูุดู ุงุณุชุนุงุฏุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช'
        });
      }
    } catch (err) {
      console.error('โ ุฎุทุฃ ูู ุงุณุชุนุงุฏุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช:', err.message);
      
      res.status(500).json({
        status: 'error',
        message: 'ุฎุทุฃ ูู ุงุณุชุนุงุฏุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช: ' + err.message
      });
    }
  });
  
  // ููุทุฉ ููุงูุฉ ููุญุตูู ุนูู ูุงุฆูุฉ ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ ุงููุชุงุญุฉ
  app.get('/api/db-backups', (req, res) => {
    try {
      const fs = require('fs');
      const path = require('path');
      const BACKUP_DIR = './db-backups';
      
      if (!fs.existsSync(BACKUP_DIR)) {
        return res.json({
          status: 'success',
          backups: []
        });
      }
      
      const backupFiles = fs.readdirSync(BACKUP_DIR)
        .filter(file => file.startsWith('backup-') && file.endsWith('.json'))
        .map(file => {
          const filePath = path.join(BACKUP_DIR, file);
          const stats = fs.statSync(filePath);
          
          return {
            name: file,
            path: filePath,
            size: stats.size,
            created_at: stats.mtime
          };
        })
        .sort((a, b) => b.created_at - a.created_at); // ุชุฑุชูุจ ุชูุงุฒูู ุญุณุจ ุชุงุฑูุฎ ุงูุฅูุดุงุก
      
      res.json({
        status: 'success',
        backups: backupFiles
      });
    } catch (err) {
      console.error('โ ุฎุทุฃ ูู ุงูุญุตูู ุนูู ูุงุฆูุฉ ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ:', err.message);
      
      res.status(500).json({
        status: 'error',
        message: 'ุฎุทุฃ ูู ุงูุญุตูู ุนูู ูุงุฆูุฉ ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ: ' + err.message
      });
    }
  });
  
  console.log('โ ุชู ุฅุถุงูุฉ ููุงุท ููุงูุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ');
}

module.exports = addDatabaseRoutes;